copyright=(c) Androsov Vadim

exit=Exit

exit_prompt=Are you sure want to exit demo?

demo_caption=Datechooser bean demo

back=Back

next=Next

Start=Start

ShowDialog=Show dialog

StartConfigurator=Start configurator
sayPane1_1=This library contains 3 java beans for date choose\: <UL> <LI>Panel<LI>Combo editor<LI>Dialog editor</UL>
sayPaneExit_2=Defo finished.
sayPaneExit_1=Demo finished. Now you can look at library customizer (or you cal simply run library file later)
sayPane4_1=That's why library is also executable file. User can customize all beans properties by means of running library and using corresponding customizer. All changes can be stored to the file and loaded with special class. Thus this component library can be used without IDE at all
sayPane3_4=Not all IDEs properly support java beans with custom editors. I used NetBeans 5 for library development. It supports all main javabean features, but other editors has different problems\: <UL><LI><b>BeanBox </b>don't show properties with null values<LI><b>IntelliJ IDEA 5.1</b> don't support BeanInfo class at all<LI><b>Eclipse</b> has not built in visual interface editor</UL>
sayPane3_3=You can set background image (filled, centered, tiled), but you need set transparency level for each cell to view this picture. <br>Of course you can do it using corresponding editor
sayPane3_2=All calendar cells belong to one of types\: caption (for week day name output), scrolling (neighbour month's days), selected, default, unaccessible. <br> Each cell has customizable background color, border, font, cursor and text colors<br>All need editors are presented in the library
sayPane3_1=Supports easily customizable visual interface profiles - skins (some hardcoded skins presented, but you can create oun skins using corresponding editor)
sayPane2_2=Date selection features\: <UL><LI>Default date(s)<LI>Minimal date<LI>Maximal date<LI>Forbidden dates</UL>
sayPane2_1=Date choose panel lets make flexible interface custumization. Default skin is "Swing", wich lets component look seamlessnessly among standart controls. <br> Supports look & feel.<br>Component uses correctly all date locales, presented in jsdk. furthermore custom property editors support 2 languages\: russian and english.
sayPane1_5=Dialog special features\: <UL> <LI>Not a visual component<LI>Window caption<LI>Can be modal (or not \:) ) </UL>
sayPane1_4=Combo editor for single selection\: <UL><LI>Auto commit selection<LI>Date can be inputted manually taking into account current format</UL>
sayPane1_3=Combo editor for multiple selection\: <UL> <LI>Double click or press enter to commit selection<LI>Esc key cancels selection <LI>Custom date output formats (full, long, middle, short) </UL>
sayPane1_2=Main panel features are\: <UL> <LI>Multy dates and periods selection (supports Shift, Ctrl, Alt and Space keys , mouse dragging) <LI>Auto scrolls when neighbour month selected<LI>Keyboard control (arrows, year and month changing by pressing PgUp, PgDown, Home, End) </UL>
sayPane5_1=Table cell editors and renderers presented (since 1.1). <br><br> Call <b>someVisualDateChooserBean.createTableCellRenderer()<b> to convert bean to cell renderer and <b>someVisualDateChooserBean.createTableCellEditor()<b> to get editor.
sayPane5_2=Also in version 1.1\: <UL> <LI>Improved javadoc both in english and russian<LI>BeanUtils class\: allows assign one bean properties to another<LI>All beans are cloneable</UL>

demo_version=1.1
