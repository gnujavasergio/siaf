/*
 * Demo.java
 *
 * Created on 15 ќкт€брь 2006 г., 8:26
 */

package datechooser.demo;

import datechooser.beans.locale.LocaleUtils;
import static datechooser.demo.locale.DemoBundle.getLocaleString;
import datechooser.demo.steps.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.*;

/**
 *
 * @author  Vadik
 */
public class Demo extends javax.swing.JFrame {
    
    private static Demo inst = null;
    private ContentPane dataPanel;
    private MyDemoPanel drawPanel;
    
    private DemoPanel[] views = new DemoPanel[] {
        new Show1Components(), new Show2Swing(), new Show3Skins(), 
        new Show4Permanent(), new Show5Table() ,new ShowExit()};
    
    public static synchronized  Demo getInstance() {
        if (inst == null) {
            inst = new Demo();
        }
        return inst;
    }
    
    public static synchronized boolean isCreated() {
        return inst != null;
    }
    
    private void nextStep() {
        getData().next();
    }
    
    private void backStep() {
        getData().previous();
    }
    
    private ContentPane getData() {
        return dataPanel;
    }
    
    private Demo() {
        LocaleUtils.prepareStandartDialogButtonText();
        initComponents();
        initCustomComponents();
        setSize(550, 450);
        makeCentered();
        showCurrentStep();
    }
    
    private void initCustomComponents() {
        dataPanel = new ContentPane();
        showPane.add(dataPanel, BorderLayout.CENTER);
        drawPanel = new MyDemoPanel();
        setGlassPane(getDrawPanel());
    }
    
    private void showCurrentStep() {
        updateCurrentStep();
        getData().play();
    }
    
    private void updateCurrentStep() {
        back.setEnabled(getData().hasPrevious());
        next.setEnabled(getData().hasNext());
        say.setText("<html> " + getData().getText());
    }
    
    private int getPanelCount() {
        return views.length;
    }
    
    private void makeCentered() {
        Toolkit kit = Toolkit.getDefaultToolkit();
        Dimension screenSize = kit.getScreenSize();
        Dimension dim = getSize();
        if ((dim.width > screenSize.width) || (dim.height > screenSize.height)) {
            setLocation(0, 0);
        } else {
            setLocation(
                    (screenSize.width - dim.width) / 2,
                    (screenSize.height - dim.height) / 2);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        navigatePane = new javax.swing.JPanel();
        buttonPane = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        copyright = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        back = new javax.swing.JButton();
        next = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        textPane = new javax.swing.JPanel();
        say = new javax.swing.JLabel();
        showPane = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Demo caption");
        setTitle(getLocaleString("demo_caption") + " " + getLocaleString("demo_version"));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                onWindowClose(evt);
            }
        });

        navigatePane.setLayout(new java.awt.BorderLayout());

        buttonPane.setLayout(new java.awt.GridLayout(1, 2));

        buttonPane.setPreferredSize(new java.awt.Dimension(200, 35));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        jPanel1.setPreferredSize(new java.awt.Dimension(100, 40));
        copyright.setText("(c) Androsov Vadim");
        copyright.setText(getLocaleString("copyright"));
        copyright.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 1, 3, 1));
        jPanel1.add(copyright);

        buttonPane.add(jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(100, 20));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        back.setText("Back");
        back.setText(getLocaleString("back"));
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goBack(evt);
            }
        });

        jPanel3.add(back);

        next.setText("Next");
        next.setText(getLocaleString("next"));
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goNext(evt);
            }
        });

        jPanel3.add(next);

        cancel.setText("Exit");
        cancel.setText(getLocaleString("exit"));
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCloseClick(evt);
            }
        });

        jPanel3.add(cancel);

        jPanel2.add(jPanel3, java.awt.BorderLayout.CENTER);

        buttonPane.add(jPanel2);

        navigatePane.add(buttonPane, java.awt.BorderLayout.CENTER);

        textPane.setLayout(new java.awt.GridLayout(1, 0));

        textPane.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(3, 5, 3, 5), javax.swing.BorderFactory.createEtchedBorder()));
        textPane.setPreferredSize(new java.awt.Dimension(100, 150));
        say.setText("jLabel1");
        textPane.add(say);

        navigatePane.add(textPane, java.awt.BorderLayout.NORTH);

        getContentPane().add(navigatePane, java.awt.BorderLayout.SOUTH);

        showPane.setLayout(new java.awt.BorderLayout());

        showPane.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(2, 5, 2, 5), javax.swing.BorderFactory.createEtchedBorder()));
        getContentPane().add(showPane, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void onWindowClose(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_onWindowClose
        tryToExit();
    }//GEN-LAST:event_onWindowClose
    
    private void goNext(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goNext
        nextStep();
    }//GEN-LAST:event_goNext
    
    private void goBack(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goBack
        backStep();
    }//GEN-LAST:event_goBack
    
    private void onCloseClick(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCloseClick
        tryToExit();
    }//GEN-LAST:event_onCloseClick
    
    
    private void tryToExit() {
        int ans = JOptionPane.showConfirmDialog(this,
                getLocaleString("exit_prompt"),
                getLocaleString("exit"),
                JOptionPane.YES_NO_OPTION);
        if (ans == JOptionPane.OK_OPTION) {
            setVisible(false);
            System.exit(0);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Demo().setVisible(true);
            }
        });
    }
    
    private JFrame getFrame() {
        return this;
    }
    
    private class ContentPane extends DemoPanel implements DemoPanelListener {
        
        public ContentPane() {
            setLayout(new BorderLayout());
            for (DemoPanel elem : views) {
                elem.setStepListener(this);
            }
            setStepListener(this);
        }
        
        public DemoPanel getShowing() {
            return views[getCurrentStep()];
        }
        
        public int getStepCount() {
            return views.length;
        }
        
        public String getText() {
            return getShowing().getText();
        }
        
        public void showCurrent() {
            removeAll();
            add(getShowing(), BorderLayout.CENTER);
            revalidate();
            repaint();
        }
        
        public void play() {
            getDrawPanel().setVisible(false);
            showCurrent();
            getShowing().play();
        }
        
        public void next() {
            if (getShowing().hasNext()) {
                getShowing().next();
            } else if (hasNext()) {
                super.next();
            }
        }
        
        public void previous() {
            if (getShowing().hasPrevious()) {
                getShowing().previous();
            } else if (hasPrevious()) {
                super.previous();
            }
        }
        
        public void onStep() {
            updateCurrentStep();
        }
        
        public boolean hasPrevious() {
            if (getShowing().hasPrevious()) return true;
            return super.hasPrevious();
        }
        
        public boolean hasNext() {
            if (getShowing().hasNext()) return true;
            return super.hasNext();
        }
        
    }
    
    public class MyDemoPanel extends JComponent {
        
        private Component target = null;
        private static final int MARKER_SIZE = 10;
        
        public MyDemoPanel() {
            setOpaque(false);
            setVisible(false);
        }
        
        protected void paintComponent(Graphics g) {
            if (getTarget() == null) return;
            Rectangle data = getTarget().getBounds();
            Component parent = getTarget().getParent();
            data = SwingUtilities.convertRectangle(parent, data, this);
            g.setColor(Color.GREEN);
            g.fillRect(data.x - MARKER_SIZE / 2, data.y - MARKER_SIZE / 2, MARKER_SIZE, MARKER_SIZE);
            g.fillRect(data.x - MARKER_SIZE / 2, data.y + data.height - MARKER_SIZE / 2, MARKER_SIZE, MARKER_SIZE);
            g.fillRect(data.x + data.width - MARKER_SIZE / 2, data.y + data.height - MARKER_SIZE / 2, MARKER_SIZE, MARKER_SIZE);
            g.fillRect(data.x + data.width - MARKER_SIZE / 2, data.y - MARKER_SIZE / 2, MARKER_SIZE, MARKER_SIZE);
        }
        
        public Component getTarget() {
            return target;
        }
        
        public void setTarget(Component target) {
            this.target = target;
            repaint();
        }
    }
    
    public MyDemoPanel getDrawPanel() {
        return drawPanel;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JPanel buttonPane;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel copyright;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel navigatePane;
    private javax.swing.JButton next;
    private javax.swing.JLabel say;
    private javax.swing.JPanel showPane;
    private javax.swing.JPanel textPane;
    // End of variables declaration//GEN-END:variables
    
}
