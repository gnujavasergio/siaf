/*
 * ShowComponents.java
 *
 * Created on 15 ќкт€брь 2006 г., 12:20
 */

package datechooser.demo.steps;

import static datechooser.demo.locale.DemoBundle.getLocaleString;
import datechooser.beans.*;
import datechooser.demo.Demo;
import datechooser.model.multiple.Period;
import datechooser.model.multiple.PeriodSet;
import java.awt.*;
import java.util.*;
import javax.swing.AbstractCellEditor;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.event.CellEditorListener;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.plaf.PanelUI;
import javax.swing.table.*;
/**
 *
 * @author  Vadik
 */
public class Show5Table extends DemoPanel {
    
    DateChooserPanel dchp;
    DateChooserCombo dchc;
    TableCellEditor ep;
    TableCellEditor ec;
    TableCellRenderer rp;
    TableCellRenderer rc;
    
    /** Creates new form ShowComponents */
    public Show5Table() {
        
        dchp = new DateChooserPanel();
        dchc = new DateChooserCombo();
        ep = dchp.createTableCellEditor();
        ec = dchc.createTableCellEditor();
        rp = dchp.createTableCellRenderer();
        rc = dchc.createTableCellRenderer();
        
        initComponents();
        
        demoTable.getModel().addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e) {
                demoTable.repaint();
            }
        });
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        demoTable = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        demoTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        demoTable.setModel(new PanelShowerTableModel());

        jScrollPane1.setViewportView(demoTable);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents
    
    public int getStepCount() {
        return 2;
    }
    
    public String getText() {
        return getLocaleString("sayPane5_" + (getCurrentStep() + 1));
    }
    
    public void play() {
        int step = getCurrentStep();
        if (step == 1) {
            demoTable.setDefaultRenderer(PeriodSet.class, rp);
            demoTable.getColumnModel().getColumn(1).setCellEditor(ep);
            demoTable.setRowHeight(170);
        } else {
            demoTable.setRowHeight(dchc.getPreferredSize().height);
            demoTable.setDefaultRenderer(PeriodSet.class, rc);
            demoTable.getColumnModel().getColumn(1).setCellEditor(ec);
        }
        demoTable.revalidate();
        demoTable.repaint();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable demoTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
    
    private class PanelShowerTableModel extends DefaultTableModel {
        
        private PeriodSet[] data;
        private static final int ROWS = 4;
        
        public PanelShowerTableModel() {
            data = new PeriodSet[ROWS];
            Calendar nowDate = new GregorianCalendar();
            Calendar nextDate = (Calendar) nowDate.clone();
            nextDate.add(Calendar.DAY_OF_MONTH, 10);
            for (int i = 0; i < ROWS; i++) {
                data[i] = new PeriodSet(new Period(nowDate, nextDate));
            }
        }
        
        public String getColumnName(int column) {
            return column == 0 ? "Date" : "Show";
        }
        
        public int getRowCount() {
            return ROWS;
        }
        
        public int getColumnCount() {
            return 2;
        }
        
        public boolean isCellEditable(int row, int column) {
            return column > 0;
        }
        
        public Object getValueAt(int row, int column) {
            return column == 0 ? data[row].toString() : data[row];
        }
        
        public void setValueAt(Object aValue, int row, int column) {
            data[row].set((PeriodSet) aValue);
            super.setValueAt(aValue, row, column);
        }
        
        public Class<?> getColumnClass(int columnIndex) {
            return columnIndex == 0 ? String.class : PeriodSet.class;
        }
    }
}
