/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.administracion;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import model.domain.Oficina;
import model.domain.Responsable;
import utils.IconUI;
import view.ViewMain;
import view.common.CommonDialog;
import view.common.CommonView;

/**
 * ResponsableView
 *
 * @author Sergio Antonio Ochoa Martinez - gnu.java.sergio@gmail.com
 * @version 0.1
 */
public class ResponsableView extends javax.swing.JPanel implements CommonView {

    private CtrlResponsableView ctrlResponsableView;
    private ResponsableForm responsableForm;
    private ResponsableTable responsableTable;
    public static ResponsableView responsableView;

    public ResponsableView() {
        responsableView = this;
        ctrlResponsableView = new CtrlResponsableView();
        initComponents();
        responsableForm = new ResponsableForm(new Responsable());
        responsableTable = new ResponsableTable();
        this.add(responsableTable, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bNew = new org.jc.swing.CoolButton(1);
        bUpdate = new org.jc.swing.CoolButton(2);
        bDelete = new org.jc.swing.CoolButton(2);

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 5));

        bNew.setText("Nuevo");
        bNew.setIcon(IconUI.getResizableIcon("add", 32,32));
        bNew.addActionListener(ctrlResponsableView);
        jPanel1.add(bNew);

        bUpdate.setText("Editar");
        bUpdate.setIcon(IconUI.getResizableIcon("update", 32, 32));
        jPanel1.add(bUpdate);
        bUpdate.addActionListener(ctrlResponsableView);

        bDelete.setText("Borrar");
        bDelete.setIcon(IconUI.getResizableIcon("delete", 32, 32));
        jPanel1.add(bDelete);
        bDelete.addActionListener(ctrlResponsableView);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jc.swing.CoolButton bDelete;
    private org.jc.swing.CoolButton bNew;
    private org.jc.swing.CoolButton bUpdate;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public ResponsableTable getResponsableTable() {
        return responsableTable;
    }

    @Override
    public void addNew() {
        ViewMain.viewMain.setCommonDialog(new CommonDialog(ViewMain.viewMain, true));
        Oficina oficina = new Oficina();
        oficina.setUnidad(ViewMain.viewMain.getUnidad());
        responsableForm.initComboBoxOficina(ViewMain.DAO.getObjects(oficina));
        responsableForm.setObject(new Responsable());
        responsableForm.getbGuardar().setText("Guardar");
        ViewMain.viewMain.getCommonDialog().add(responsableForm);
        ViewMain.viewMain.getCommonDialog().visibleDialog("Nuevo Responsable");
    }

    @Override
    public void addUpdate() {
        ViewMain.viewMain.setCommonDialog(new CommonDialog(ViewMain.viewMain, true));
        Responsable responsable = new Responsable();
        responsable = (Responsable) responsableTable.getSelectedObject(responsable);
        if (responsable != null) {
            responsable = (Responsable) ViewMain.DAO.getObject(responsable);
            Oficina oficina = new Oficina();
            oficina.setUnidad(ViewMain.viewMain.getUnidad());
            responsableForm.initComboBoxOficina(ViewMain.DAO.getObjects(oficina));
            responsableForm.setObject(responsable);
            responsableForm.getbGuardar().setText("Actualizar");
            ViewMain.viewMain.getCommonDialog().add(responsableForm);
            ViewMain.viewMain.getCommonDialog().visibleDialog("Actualizando " + responsable.getNombre());
        } else {
            JOptionPane.showMessageDialog(ViewMain.viewMain, "No selecciono ninguna Responsable", "Mensaje", 0);
        }
    }

    @Override
    public void addDelete() {
        Responsable responsable = new Responsable();
        responsable = (Responsable) responsableTable.getSelectedObject(responsable);
        if (responsable != null) {
            int option = JOptionPane.showConfirmDialog(ViewMain.viewMain, "Esta seguro que desea borrar la Responsable", "Borrar", 0);
            if (option == 0) {
                if (ViewMain.DAO.delete(responsable) == 1) {
                    responsableTable.reload();
                } else {
                    JOptionPane.showMessageDialog(ViewMain.viewMain, "Nose puede eliminar el responsable porque esta asignado algun Activo Fijo.", "Mensaje", JOptionPane.ERROR_MESSAGE);
                }
            }
        } else {
            JOptionPane.showMessageDialog(ViewMain.viewMain, "No selecciono ninguna responsable", "Borrar", 0);
        }
    }

    private class CtrlResponsableView implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Object aux = e.getSource();
            if (aux.equals(bNew)) {
                addNew();
            } else if (aux.equals(bUpdate)) {
                addUpdate();
            } else if (aux.equals(bDelete)) {
                addDelete();
            }
        }
    }
}
