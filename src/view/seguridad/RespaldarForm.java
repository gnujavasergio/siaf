/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.seguridad;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import utils.FiltroBackup;
import utils.IconUI;
import view.ViewMain;

/**
 * RespaldarForm
 *
 * @author Sergio Antonio Ochoa Martinez - gnu.java.sergio@gmail.com
 */
public class RespaldarForm extends javax.swing.JPanel {

    private CtrlRespaldarForm ctrlRespaldarForm;

    /**
     * RespaldarForm
     */
    public RespaldarForm() {
        ctrlRespaldarForm = new CtrlRespaldarForm();
        initComponents();
    }

    public JTextField getTfDireccion() {
        return tfDireccion;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fcRespaldar = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        tfDireccion = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        bExaminar = new org.jc.swing.CoolButton(0);
        jPanel2 = new javax.swing.JPanel();
        bRespaldar = new org.jc.swing.CoolButton(0);
        bCancelar = new org.jc.swing.CoolButton(0);
        headerEntidad = new org.jdesktop.swingx.JXHeader();

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tfDireccion.setEditable(false);

        jLabel4.setText("Nombre:");

        bExaminar.setText("Examinar");
        bExaminar.addActionListener(ctrlRespaldarForm);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bExaminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bExaminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        bRespaldar.setText("Respaldar");
        bRespaldar.addActionListener(ctrlRespaldarForm);
        bRespaldar.setIcon(IconUI.getResizableIcon("aceptar", 32, 32));
        jPanel2.add(bRespaldar);

        bCancelar.setText("Cancelar");
        bCancelar.addActionListener(ctrlRespaldarForm);
        bCancelar.setIcon(IconUI.getResizableIcon("cancelar", 32, 32));
        jPanel2.add(bCancelar);

        headerEntidad.setDescription("Se realizara una copia de la base de Datos");
        headerEntidad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/entidad.png"))); // NOI18N
        headerEntidad.setIconPosition(org.jdesktop.swingx.JXHeader.IconPosition.LEFT);
        headerEntidad.setTitle("Respaldar");
        headerEntidad.setTitleFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(headerEntidad, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(headerEntidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jc.swing.CoolButton bCancelar;
    private org.jc.swing.CoolButton bExaminar;
    private org.jc.swing.CoolButton bRespaldar;
    private javax.swing.JFileChooser fcRespaldar;
    private org.jdesktop.swingx.JXHeader headerEntidad;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField tfDireccion;
    // End of variables declaration//GEN-END:variables

    
    
    private void addExaminar() {
        fcRespaldar.addChoosableFileFilter(new FiltroBackup(new String[]{".saf"}, "Archivos Backup SAF (*.saf)"));
        int guardar = fcRespaldar.showSaveDialog(ViewMain.viewMain);
        if (guardar == JFileChooser.APPROVE_OPTION) {
            if (fcRespaldar.getSelectedFile() != null) {
                tfDireccion.setText(fcRespaldar.getSelectedFile().getAbsolutePath() + ".saf");
            }
        }
    }

    public void addRespaldar() {
        if (tfDireccion.getText().compareTo("") != 0) {
            exiteFile();
            ViewMain.viewMain.getCommonDialog().dispose();
        } else {
            JOptionPane.showMessageDialog(ViewMain.viewMain, "No se tiene una direccion, no se puede realizar el Backup", "Mensaje", JOptionPane.WARNING_MESSAGE);
            addExaminar();
        }
    }

    private void exiteFile() {
        String nombreArchivo = tfDireccion.getText();
        File file = new File(nombreArchivo);
        if (file.exists()) {
            int res = JOptionPane.showConfirmDialog(ViewMain.viewMain, "El Backup con el nombre \"" + nombreArchivo + "\" ya existe\n Â¿Desea Sobreescribirlo?",
                    "Mensaje", JOptionPane.YES_NO_OPTION);
            if (res == JOptionPane.YES_OPTION) {
                seRealizoBackup(nombreArchivo);
            } else {
                JOptionPane.showMessageDialog(ViewMain.viewMain, "No se realizo el Backup", "Mensaje", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            System.out.println("Archivo nuevo");
            seRealizoBackup(nombreArchivo);
        }

    }

    private void seRealizoBackup(String direccion) {
        ZipOutputStream out = null;
        try {
            File data = new File("data/");
            String[] entries = data.list();
            byte[] buffer = new byte[4096]; // Crea un buffer para copiar
            int bytesRead;
            out = new ZipOutputStream(new FileOutputStream(direccion));
            for (int i = 0; i < entries.length; i++) {
                File f = new File(data, entries[i]);
                if (f.isDirectory()) {
                    
                    continue; //Ignora el directorio
                }
                FileInputStream in = new FileInputStream(f);
                ZipEntry entry = new ZipEntry(f.getPath()); //Crea una entrada zip para cada archivo,
                out.putNextEntry(entry);

                while ((bytesRead = in.read(buffer)) != -1) {
                    out.write(buffer, 0, bytesRead);
                }
                in.close();
            }
            out.close();
            JOptionPane.showMessageDialog(ViewMain.viewMain, "Se realizo correctamente el Respaldo de la Base de Datos.", "Mensaje", JOptionPane.WARNING_MESSAGE);

        } catch (IOException ex) {
            JOptionPane.showMessageDialog(ViewMain.viewMain, "No se pudo realizar el Respaldo de la Base de Datos.", "Mensaje", JOptionPane.WARNING_MESSAGE);
        }
    }

    private class CtrlRespaldarForm implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Object aux = e.getSource();
            if (aux.equals(bExaminar)) {
                addExaminar();
            } else if (aux.equals(bRespaldar)) {
                addRespaldar();
            } else if (aux.equals(bCancelar)) {
                ViewMain.viewMain.getCommonDialog().dispose();
            }
        }
    }
}
