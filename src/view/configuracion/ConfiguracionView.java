/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.configuracion;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import model.domain.Configuracion;
import model.domain.Unidad;
import utils.IconUI;
import view.ViewMain;
import view.common.CommonDialog;
import view.common.CommonView;

/**
 * ConfiguracionView
 *
 * @author Sergio Antonio Ochoa Martinez - gnu.java.srgio@gmail.com
 */
public class ConfiguracionView extends javax.swing.JPanel implements CommonView {

    private CtrlConfiguracionView ctrlConfiguracionView;
    private ConfiguracionForm configuracionForm;
    private ConfiguracionTable configuracionTable;
    public static ConfiguracionView configuracionView;
    private CommonDialog commonDialog;

    public ConfiguracionView() {
        configuracionView = this;
        ctrlConfiguracionView = new CtrlConfiguracionView();
        initComponents();
        configuracionForm = new ConfiguracionForm();
        configuracionTable = new ConfiguracionTable();
        this.add(configuracionTable, BorderLayout.CENTER);
    }

    public CommonDialog getCommonDialog() {
        return commonDialog;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bNew = new org.jc.swing.CoolButton(1);
        bUpdate = new org.jc.swing.CoolButton(2);
        bExit = new org.jc.swing.CoolButton(2);

        setLayout(new java.awt.BorderLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 5));

        bNew.setText("Nuevo");
        bNew.setIcon(IconUI.getResizableIcon("add", 32,32));
        bNew.addActionListener(ctrlConfiguracionView);
        jPanel1.add(bNew);

        bUpdate.setText("Editar");
        bUpdate.setIcon(IconUI.getResizableIcon("update", 32, 32));
        jPanel1.add(bUpdate);
        bUpdate.addActionListener(ctrlConfiguracionView);

        bExit.setText("Salir");
        bExit.setIcon(IconUI.getResizableIcon("salir", 32,32));
        bExit.addActionListener(ctrlConfiguracionView);
        jPanel1.add(bExit);

        add(jPanel1, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jc.swing.CoolButton bExit;
    private org.jc.swing.CoolButton bNew;
    private org.jc.swing.CoolButton bUpdate;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    public ConfiguracionTable getConfiguracionTable() {
        return configuracionTable;
    }

    public void addDetail() {
        Configuracion configuracion = new Configuracion();
        configuracion = (Configuracion) configuracionTable.getSelectedObject(configuracion);
        if (configuracion != null) {
            configuracion = (Configuracion) ViewMain.DAO.getObject(configuracion);
            ViewMain.viewMain.setCommonDialog(new CommonDialog(ViewMain.viewMain, true));
            configuracionForm.setObject(configuracion);
            ViewMain.viewMain.getCommonDialog().add(configuracionForm);
            ViewMain.viewMain.getCommonDialog().visibleDialog("UFV");
            ViewMain.viewMain.getGlassPane().setVisible(false);
        } else {
            JOptionPane.showMessageDialog(ViewMain.viewMain, "No selecciono ninguna Baja", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override
    public void addNew() {
        ViewMain.viewMain.setCommonDialog(new CommonDialog(ViewMain.viewMain, true));
        configuracionForm.setObject(new Configuracion());
        configuracionForm.getbGuardar().setText("Guardar");
        configuracionForm.getHeaderConfiguracion().setDescription("Introducir UFV");
        ViewMain.viewMain.getCommonDialog().add(configuracionForm);
        ViewMain.viewMain.getCommonDialog().visibleDialog("Nueva Unidad");
    }

    @Override
    public void addUpdate() {
        Configuracion configuracion = new Configuracion();
        configuracion = (Configuracion) configuracionTable.getSelectedObject(configuracion);
        if (configuracion != null) {
            configuracion = (Configuracion) ViewMain.DAO.getObject(configuracion);
            ViewMain.viewMain.setCommonDialog(new CommonDialog(ViewMain.viewMain, true));
            configuracionForm.setObject(configuracion);
            configuracionForm.getbGuardar().setText("Actualizar");
            configuracionForm.getHeaderConfiguracion().setDescription("Actualizar UFV");
            ViewMain.viewMain.getCommonDialog().add(configuracionForm);
            ViewMain.viewMain.getCommonDialog().visibleDialog("Actualizando " + configuracion.getUFV());
        } else {
            JOptionPane.showMessageDialog(ViewMain.viewMain, "No selecciono ninguna Baja", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }

    @Override
    public void addDelete() {
    }

    private class CtrlConfiguracionView implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Object aux = e.getSource();
            if (aux.equals(bNew)) {
                addNew();
            } else if (aux.equals(bUpdate)) {
                addUpdate();
            } else if (aux.equals(bExit)) {
                ViewMain.viewMain.getFrontend().hide(ViewMain.viewMain.getDockableConfiguracion());
            }
        }
    }
}
