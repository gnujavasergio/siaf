/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.activos;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import model.domain.ActivoFijo;
import model.domain.Oficina;
import model.domain.Responsable;
import model.domain.Unidad;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import utils.IconUI;
import view.ViewMain;

/**
 * TransferForm
 *
 * @author Sergio Antonio Ochoa Martinez - gnu.java.sergio@gmail.com
 * @version 0.1
 */
public class TransferForm extends javax.swing.JPanel {

    private CtrlTransferForm ctrlTransferForm;
    private ActivoFijo activoFijo;
    private DefaultComboBoxModel comboBoxModelUnidad;
    private DefaultComboBoxModel comboBoxModelOficina;
    private DefaultComboBoxModel comboBoxModelResponsable;

    /**
     * TransferForm
     */
    public TransferForm() {
        ctrlTransferForm = new CtrlTransferForm();
        initComponents();
    }

    public void initComboBoxUnidad(java.util.List list) {
        comboBoxModelUnidad = new DefaultComboBoxModel();
        comboBoxModelUnidad.removeAllElements();
        for (Object o : list) {
            comboBoxModelUnidad.addElement((Unidad) o);
        }
        cbUnidad.setModel(comboBoxModelUnidad);
    }        

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerActivoFijo = new org.jdesktop.swingx.JXHeader();
        panelCurves1 = new org.jc.swing.panel.PanelCurves();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfUnidad = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfOficina = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbUnidad = new javax.swing.JComboBox();
        cbOficina = new javax.swing.JComboBox();
        cbResponsable = new javax.swing.JComboBox();
        tfResponsable = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        bAceptar = new org.jc.swing.CoolButton(0);
        bCancel = new org.jc.swing.CoolButton(0);

        setLayout(new java.awt.BorderLayout());

        headerActivoFijo.setDescription("");
        headerActivoFijo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/entidad.png"))); // NOI18N
        headerActivoFijo.setIconPosition(org.jdesktop.swingx.JXHeader.IconPosition.LEFT);
        headerActivoFijo.setTitle("Transferir");
        headerActivoFijo.setTitleFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        add(headerActivoFijo, java.awt.BorderLayout.PAGE_START);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Unidad Actual:");

        tfUnidad.setEnabled(false);

        jLabel2.setText("Oficina Actual:");

        tfOficina.setEnabled(false);

        jLabel3.setText("Responsable Actual:");

        jLabel4.setText("Nueva Unidad:");

        jLabel5.setText("Nueva Oficina:");

        jLabel6.setText("Nuevo Responsable:");

        AutoCompleteDecorator.decorate(cbUnidad);
        cbUnidad.addActionListener(ctrlTransferForm);

        AutoCompleteDecorator.decorate(cbOficina);
        cbOficina.addActionListener(ctrlTransferForm);

        AutoCompleteDecorator.decorate(cbResponsable);

        tfResponsable.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jLabel5))
                    .addComponent(jLabel3)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2)))
                .addGap(50, 50, 50)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfOficina)
                    .addComponent(tfUnidad)
                    .addComponent(cbUnidad, 0, 250, Short.MAX_VALUE)
                    .addComponent(cbOficina, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbResponsable, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfResponsable, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfOficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbUnidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbOficina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbResponsable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        bAceptar.setText("Aceptar");
        bAceptar.addActionListener(ctrlTransferForm);
        bAceptar.setIcon(IconUI.getResizableIcon("aceptar", 32, 32));
        jPanel3.add(bAceptar);

        bCancel.setText("Cancelar");
        bCancel.addActionListener(ctrlTransferForm);
        bCancel.setIcon(IconUI.getResizableIcon("cancelar", 32, 32));
        jPanel3.add(bCancel);

        javax.swing.GroupLayout panelCurves1Layout = new javax.swing.GroupLayout(panelCurves1);
        panelCurves1.setLayout(panelCurves1Layout);
        panelCurves1Layout.setHorizontalGroup(
            panelCurves1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCurves1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelCurves1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                    .addGroup(panelCurves1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelCurves1Layout.setVerticalGroup(
            panelCurves1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelCurves1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
        );

        add(panelCurves1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jc.swing.CoolButton bAceptar;
    private org.jc.swing.CoolButton bCancel;
    private javax.swing.JComboBox cbOficina;
    private javax.swing.JComboBox cbResponsable;
    private javax.swing.JComboBox cbUnidad;
    private org.jdesktop.swingx.JXHeader headerActivoFijo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private org.jc.swing.panel.PanelCurves panelCurves1;
    private javax.swing.JTextField tfOficina;
    private javax.swing.JTextField tfResponsable;
    private javax.swing.JTextField tfUnidad;
    // End of variables declaration//GEN-END:variables

    public void setObject(Object obj) {
        activoFijo = (ActivoFijo) obj;
        tfUnidad.setText(ViewMain.viewMain.getUnidad().toString());
        tfOficina.setText(activoFijo.getResponsable().getOficina().toString());
        tfResponsable.setText(activoFijo.getResponsable().toString());
    }

    public void getObject() {
        if (cbResponsable.isEnabled()) {
            activoFijo.setResponsable((Responsable) cbResponsable.getSelectedItem());
            activoFijo.setTransfer(true);
            activoFijo.setUsuario(ViewMain.viewMain.getUsuario());
            ViewMain.DAO.update(activoFijo);
            ActivoFijoForm.activoFijoForm.setObject(activoFijo);
            ActivoFijoView.activoFijoView.getActivoFijoTable().reload();
            ActivoFijoView.activoFijoView.getDialog().dispose();
            ActivoFijoView.activoFijoView.getCommonDialog().dispose();
        } 
        else {
            JOptionPane.showMessageDialog(ViewMain.viewMain, "No se seleccione ningun responsable", "Mensaje", JOptionPane.ERROR_MESSAGE);
        }
    }

    private class CtrlTransferForm extends KeyAdapter implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            Object aux = e.getSource();
            if (aux.equals(bAceptar)) {
                getObject();
            } else if (aux.equals(bCancel)) {
                ActivoFijoView.activoFijoView.getDialog().dispose();
            } else if (aux.equals(cbUnidad)) {
                Unidad unidad = (Unidad) cbUnidad.getSelectedItem();
                Oficina oficina = new Oficina();
                oficina.setUnidad(unidad);
                List list = ViewMain.DAO.getObjects(oficina);
                if (!list.isEmpty()) {
                    cbOficina.setEnabled(true);
                    comboBoxModelOficina = new DefaultComboBoxModel();
                    comboBoxModelOficina.removeAllElements();
                    for (Object o : list) {
                        comboBoxModelOficina.addElement((Oficina) o);
                    }
                    cbOficina.setModel(comboBoxModelOficina);
                } else {
                    cbOficina.setEnabled(false);
                    comboBoxModelOficina.removeAllElements();
                    cbOficina.setModel(comboBoxModelOficina);
                }

            } else if (aux.equals(cbOficina)) {
                Oficina oficina = (Oficina) cbOficina.getSelectedItem();
                Responsable responsable = new Responsable();
                responsable.setOficina(oficina);
                List list = ViewMain.DAO.getObjects(responsable);
                if (!list.isEmpty()) {
                    cbResponsable.setEnabled(true);
                    comboBoxModelResponsable = new DefaultComboBoxModel();
                    comboBoxModelResponsable.removeAllElements();
                    for (Object o : list) {
                        comboBoxModelResponsable.addElement((Responsable) o);
                    }
                    cbResponsable.setModel(comboBoxModelResponsable);
                } else {
                    cbResponsable.setEnabled(false);
                    comboBoxModelResponsable.removeAllElements();
                    cbResponsable.setModel(comboBoxModelResponsable);
                }
            }
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getKeyCode() == 10) {
                if (bAceptar.isFocusable()) {
                    getObject();
                } else if (bCancel.isFocusable()) {
                    ActivoFijoView.activoFijoView.getDialog().dispose();
                }
            }
        }
    }
}
